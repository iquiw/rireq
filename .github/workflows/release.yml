name: Release

on:
  push:
    tags:
      - "*"

defaults:
  run:
    shell: bash

jobs:
  build:
    strategy:
      matrix:
        target:
          - x86_64-apple-darwin
          - x86_64-pc-windows-msvc
          - x86_64-unknown-linux-musl
        include:
          - target: x86_64-apple-darwin
            os: macos-latest
          - target: x86_64-pc-windows-msvc
            os: windows-latest
          - target: x86_64-unknown-linux-musl
            os: ubuntu-latest

    runs-on: ${{ matrix.os }}

    steps:
      - uses: actions/checkout@v4

      - name: Install coreutils for macOS
        if: matrix.os == 'macos-latest'
        run: brew install coreutils

      - name: Install Rust
        uses: dtolnay/rust-toolchain@stable
        with:
          targets: ${{ matrix.target }}

      - name: Build
        run: |
          cargo build --target ${{ matrix.target }} --release --locked

      - name: Package
        run: |
          exe=rireq
          package="rireq-${VERSION}-${TARGET}.tar.gz"
          if [ "${OS}" = windows-latest ]; then
            exe=rireq.exe
          fi
          mkdir dist release
          mv "target/${TARGET}/release/${exe}" dist/
          cp LICENSE dist/
          cd dist
          tar caf "../release/${package}" "${exe}" LICENSE
          cd ../release
          sha256sum "${package}" > "${package}.sha256"
        env:
          OS: ${{ matrix.os }}
          TARGET: ${{ matrix.target }}
          VERSION: ${{  github.ref_name }}
        shell: bash

      - name: Upload packages
        uses: actions/upload-artifact@v4
        with:
          name: rireq-${{ matrix.os }}
          path: |
            release/

  release:
    runs-on: ubuntu-latest

    needs: [build]

    steps:
      - name: Download packages
        uses: actions/download-artifact@v4
        with:
          path: release/
          merge-multiple: true

      - name: Publish
        uses: ncipollo/release-action@v1
        with:
          artifacts: "release/*"
          body: |
            ## rireq ${{ github.ref_name }}
